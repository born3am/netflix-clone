{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/HighlightedMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","process","basicFetch","endpoint","a","fetch","req","json","Tmdb","getHomeList","slug","title","items","getMovieInfo","movieId","type","movieInfo","MovieRow","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","HighlightedMovie","console","log","firstDate","Date","first_air_date","shortMonth","toLocaleString","month","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","vote_average","getFullYear","number_of_seasons","href","id","join","Header","black","App","movieList","setMovieList","HighlightedData","setHighlightedData","blackHeader","setBlackHeader","useEffect","loadAll","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c73f223c.chunk.js","sourcesContent":["const API_KEY = process.env.REACT_APP_TMDB_API_KEY; ;\nconst API_BASE = \"https://api.themoviedb.org/3\";\n\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = await req.json();\n  return json;\n};\n\nconst Tmdb = {\n  getHomeList: async () => {\n    return [\n      {\n        slug: \"originals\",\n        title: \"Netflix Originals\",\n        items: await basicFetch(\n          `/discover/tv?with_network=213?language=en-US&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"trending\",\n        title: \"People are talking about\",\n        items: await basicFetch(\n          `/trending/movie/week?language=en-US&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"top-rated\",\n        title: \"Top Rated Movies\",\n        items: await basicFetch(\n          `/movie/top_rated?language=en-US&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"action\",\n        title: \"Action Movies\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=28&language=en-US&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"comedy\",\n        title: \"Comedies\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=35&language=en-US&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"thriller\",\n        title: \"Thrillers\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=53&language=en-US&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"science-fiction\",\n        title: \"Science Fiction\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=878&language=en-US&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"family\",\n        title: \"Family\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=10751&language=en-US&api_key=${API_KEY}`\n        ),\n      },\n    ];\n  },\n\n  getMovieInfo: async (movieId, type) => {\n    let movieInfo = {};\n    if (type === \"movie\") {\n      movieInfo = await basicFetch(\n        `/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n      );\n    } else if (type === \"tv\") {\n      movieInfo = await basicFetch(\n        `/tv/${movieId}?language=en-US&api_key=${API_KEY}`\n      );\n    }\n    return movieInfo;\n  }\n\n};\n\n\n\n\n\n\n\nexport default Tmdb;\n","import React, { useState } from \"react\";\nimport \"./MovieRow.css\";\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default function MovieRow({ title, items }) {\n  const [scrollX, setScrollX] = useState(-400);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n    if (x > 0) {\n      x = 0;\n    }\n    setScrollX(x);\n  }\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let listW = items.results.length * 150;\n    if ((window.innerWidth - listW) > x) {\n      x = window.innerWidth - listW - 60;\n    }\n    setScrollX(x);\n  }\n\n\n  return (\n    <div className=\"movieRow\" >\n      <h2>{title} </h2>\n      <div className=\"movieRow--left\" onClick={handleLeftArrow} >\n        <NavigateBeforeIcon style={{ fontSize: 50 }} />\n      </div>\n      <div className=\"movieRow--right\" onClick={handleRightArrow}>\n        <NavigateNextIcon style={{ fontSize: 50 }} />\n      </div>\n\n      <div className=\"movieRow--listarea\">\n        <div className=\"movieRow--list\" style={{\n          marginLeft: scrollX,\n          width: (items.results.length * 150),\n        }} >\n\n          {items.results.length > 0 && items.results.map((item, key) => (\n            <div key={key} className=\"movieRow--item\">\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\n            </div>\n\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './HighlightedMovie.css'\n\nexport default function HighlightedMovie({ item }) {\n\n    console.log('====================================');\n    console.log(item);\n    console.log('====================================');\n\n    let firstDate = new Date(item.first_air_date);\n    let shortMonth = firstDate.toLocaleString('en-us', { month: 'short' }); /* Jun */\n\n    let genres = [];\n\n    for (let i in item.genres) {\n        genres.push(item.genres[i].name);\n    }\n\n    let description = item.overview;\n    if (description.length > 200) {\n        description = description.substring(0, 200) + '...';\n    }\n\n\n    return (\n        <section className=\"highlighted\" style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original/${item.backdrop_path})`\n        }} >\n            <div className=\"highlighted--vertical\">\n                <div className=\"highlighted--horizontal\">\n                    <div className=\"highlighted--name\"> {item.name} </div>\n                    <div className=\"highlighted--info\" >\n                        <div className=\"highlighted--points\"> {item.vote_average} points</div>\n                        <div className=\"highlighted--year\"> {` ${shortMonth}-${firstDate.getFullYear()}`} </div>\n                        <div className=\"highlighted--seasons\"> {item.number_of_seasons} season{item.number_of_seasons !== 1 ? \"s\" : \"\"}  </div>\n                    </div>\n                    <div className=\"highlighted--description\"> {description} </div>\n                    <div className=\"highlighted--buttons\">\n                        <a href={`watch/${item.id} `} className=\"highlighted--watch-button\" > &#x25b6; Watch</a>\n                        <a href={`list/add/${item.id}`} className=\"highlighted--list-button\" > + My List </a>\n                    </div>\n\n                    <div className=\"highlighted--genres\">\n                        <strong>Genres: </strong> {genres.join(', ')}\n                    </div>\n\n                </div>\n\n            </div>\n\n\n        </section>\n    )\n}\n","import React from 'react'\nimport './Header.css'\n\nexport default function Header({black}) {\n    return (\n        <header className={black ? \"black\" : \"\"}>\n            <div className=\"header--logo\">\n                <a href=\"/\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/799px-Netflix_2015_logo.svg.png\" alt=\"Netflix\" />\n                </a>\n            </div>\n            <div className=\"header--user\">\n                <a href=\"/\">\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"user\" />\n                </a>\n            </div>\n            \n        </header>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport Tmdb from './Tmdb'\nimport MovieRow from './components/MovieRow';\nimport HighlightedMovie from './components/HighlightedMovie';\nimport Header from './components/Header';\n\nexport default function App() {\n\n  const [movieList, setMovieList] = useState([]);\n  const [HighlightedData, setHighlightedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      // getting all the listStyle:\n      let list = await Tmdb.getHomeList()\n\n      // getting highlighted movie:\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')      \n      setHighlightedData(chosenInfo)\n\n      setMovieList(list)\n\n\n    }\n\n    loadAll();\n  }, [])\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, [])\n\n\n\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader} />\n\n      {HighlightedData &&\n        <HighlightedMovie item={HighlightedData} />\n      }\n\n      <section className=\"lists\" >\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <footer>\n        <p>\n          developed by\n          <span>\n            <a href=\"https://github.com/born3am\"> born3am</a>\n          </span> - 2021\n        </p>\n\n        <p>\n          Image rights reserved to\n          <span>\n            <a href=\"https://www.netflix.com\"> Netflix</a>\n          </span>\n\n        </p>\n\n        <p>\n          Data source:\n          <span> <a href=\"https://www.themoviedb.org\"> TMDB</a>\n          </span>\n        </p>\n\n      </footer>\n\n          {movieList.length <= 0 &&\n      <div className=\"loading\">\n        <img src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\" alt=\"loading\" />\n      </div>\n      }\n\n    </div >\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}